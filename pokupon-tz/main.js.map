{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-search></app-search>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'pokupon-tz';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule, MatFormFieldModule, MatInputModule, MatSelectModule} from '@angular/material';\n\nimport { AppComponent } from './app.component';\nimport { SearchComponent } from './search/search.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"form{\\r\\n    margin-top: 40vh; \\r\\n}\"","module.exports = \"<form [formGroup]=\\\"form\\\" fxLayout =\\\"column\\\" fxLayout.gt-xs = \\\"row\\\"\\n                         fxLayoutAlign =\\\"center\\\" fxLayoutAlign.gt-xs =\\\"center start\\\" \\n                         fxLayoutGap =\\\"10px\\\">\\n\\n  <mat-form-field floatLabel='never'\\n                  fxFlex = \\\"40\\\" fxFlex.gt-sm =\\\"50\\\" >\\n    <input matInput type=\\\"search\\\" autofocus \\n           formControlName=\\\"searchField\\\" \\n           placeholder=\\\"Введите текст для поиска\\\">\\n    <mat-error *ngIf=\\\"form.get('searchField')?.hasError('required')&& preSubmitInvalid\\\">\\n      Это поле не может быть <strong> пустым</strong>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field fxFlex = \\\"35\\\" fxFlex.gt-md =\\\"22\\\" floatLabel='never'>\\n    <mat-select formControlName=\\\"searchSystem\\\" \\n                placeholder=\\\"Укажите поисковую систему\\\">\\n      <mat-option value=\\\"google.com\\\">google.com</mat-option>\\n      <mat-option value=\\\"bing.com\\\">bing.com</mat-option>\\n      <mat-option value=\\\"ask.com\\\">ask.com</mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"form.get('searchSystem')?.hasError('required')&& preSubmitInvalid\\\">\\n      Вам нужно выбрать поисковую систему\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"onSubmit()\\\" type=\\\"submit\\\">Искать</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '../../../node_modules/@angular/forms';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  form: FormGroup;\n  preSubmitInvalid = false;\n  constructor() { }\n\n  ngOnInit() {\n     this.form = new FormGroup({\n      searchField: new FormControl('', Validators.required),\n      searchSystem: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit() {\n    if (this.form.invalid) {\n      this.preSubmitInvalid = true;\n    } else if (this.form.valid) {\n      this.preSubmitInvalid = false;\n\n      const system = this.form.get('searchSystem').value;\n      const request = this.form.get('searchField').value.split(' ').join('+');\n      document.location.href = this.getUrl(system, request);\n    }\n  }\n\n  getUrl(system, request) {\n   if (system === 'ask.com') {\n    return  `https://${system}/web?q=${request}`;\n   }\n    return  `https://${system}/search?q=${request}`;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}